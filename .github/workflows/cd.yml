name: CD

on:
  push:
    branches:
      - master

env:
  IMAGE_NAME: golang-sample-app

jobs:
  build:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    steps:
    - name: Set up Go 1.13
      uses: actions/setup-go@v1
      with:
        go-version: 1.13
      id: go
      
    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Build Code
      run: go build -v .
    
    - name: Log into Registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

    - name: Set Version
      run: |
        git pull --tags >/dev/null 2>&1
        VERSION=$(git tag --sort=taggerdate | tail -1)
        echo "Current tag for master: $VERSION"
        VERSION=${VERSION:-'0.0.0'}
        MAJOR="${VERSION%%.*}"; VERSION="${VERSION#*.}"
        MINOR="${VERSION%%.*}"; VERSION="${VERSION#*.}"
        PATCH="${VERSION%%.*}"; VERSION="${VERSION#*.}"
        PATCH=$((PATCH+1))

        imageTag="$MAJOR.$MINOR.$PATCH"
        IMAGE_NAME=${{ github.event.repository.name }}:$imageTag
        echo ::set-env name=IMAGE::$IMAGE_NAME

    - name: Build & Push image
      run: |
        VERSION="v$GITHUB_RUN_NUMBER"
        IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$IMAGE

        docker build . --file Dockerfile --tag $IMAGE_ID:$VERSION
        echo IMAGE_ID=$IMAGE_ID
        echo VERSION=$VERSION
        docker tag $IMAGE_ID:$VERSION $IMAGE_ID:latest

        docker push $IMAGE_ID:$VERSION
        docker push $IMAGE_ID:latest
        IMAGE_NAME=$IMAGE_ID:$VERSION
        echo ::set-env name=IMAGE::$IMAGE_NAME
    
    - name: Deploy
      uses: steebchen/kubectl@master
      env:
        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG }}
      with:
        args: set image -n prod deployment/golang-deployment golang=$IMAGE
